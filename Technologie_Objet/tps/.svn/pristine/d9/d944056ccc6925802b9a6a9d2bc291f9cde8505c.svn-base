package allumettes;
import java.util.Scanner;

/** Fait respecter les règles du jeu aux deux joueurs.
 * 
 * @author ncazes2
 *
 */
public class Arbitre {
	
	private Joueur j1;
	private Joueur j2;
	private boolean confiant; // si confiant, l'arbitre transmet tout le jeu au joueur
	                          // sinon, il passe par la procuration
	
	public Arbitre(Joueur j1, Joueur j2, boolean confiant) {
		this.j1 = j1;
		this.j2 = j2;
		this.confiant = confiant;
		
	}
	
	/** Obtenir le joueur 1.
	 * @return j1 le joueur 1
	 */
	
	public Joueur getJ1(){
		return this.j1;
	}
	
	/** Obtenir le joueur 2.
	 * @return j2 le joueur 2
	 */
	
	public Joueur getJ2(){
		return this.j2;
	}
	
	/** Modifier le joueur 1.
	 * @param j1 le joueur 1
	 */
	public void setJ1(Joueur j1){
		this.j1 = j1;
	}
	
	/** Modifier le joueur 2.
	 * @param j2 le joueur 2
	 */
	public void setJ2(Joueur j2){
		this.j2 = j2;
	}
	
	/** Faire jouer un joueur.
	 * @param j le joueur à faire jouer
	 * @param jeu le jeu dans lequel on est
	 */
	public void faireJouer(Joueur j, Jeu jeu){
		System.out.println("Au tour de " + j.getNom() +".");
		int nbAllumettes = 0;
		try {
			if (confiant) { // Transmet le jeu 
				nbAllumettes = j.getPrise(jeu);
			} else { // Passe par la procuration
			    nbAllumettes = j.getPrise(new Procuration(jeu));
			}
			String result = ""; 
			System.out.println(j.getNom() + " prend " + nbAllumettes + (result = (nbAllumettes == 1) ? "allumette." : "allumettes."));
			jeu.retirer(nbAllumettes);
		} catch(CoupInvalideException e) {
			
//			  if (j.getStrategie() instanceof StrategieHumaine) {
//			  System.out.println(j.getStrategie().scanner.nextLine()); 
//			}
		 
			System.out.println(e.getMessage());
			System.out.println("Recommencez !");
			faireJouer(j, jeu);
        } catch(OperationInterditeException e1) {
        	System.out.println("Partie abandonnée car " + j.getNom() + " a triché !");
        }
	}
	
	/** Arbitrer une partie.
	 * @param jeu le jeu dans lequel on est
	 */
	public void arbitrer(Jeu jeu) {
		System.out.println("Nombre d'allumettes restantes : " + jeu.getNombreAllumettes());
		while (jeu.getNombreAllumettes()!= 0) {
			faireJouer(j1, jeu);
			if (jeu.getNombreAllumettes()!= 0) {
				faireJouer(j2, jeu);
			} else {
				// j1 a perdu
				System.out.println(j1.getNom() + " a perdu!");
				System.out.println(j2.getNom() + " a gagné!");

			}
		}
		// j2 a gagné
		System.out.println(j2.getNom() + " a perdu!");
		System.out.println(j1.getNom() + " a gagné!");
	}
	

}
