import java.awt.Color;
//import java.awt.Point;
//import Point;
//import Point;
/** Cercle modélise une courbe plane constituée de points situés à distance égale d'un point nommé centre.
* Cette distance est appelée rayon du cercle.
* On peut savoir si un point est à l'intérieur d'un cercle au sens large.
*
*@author Noa Cazes <noa.cazes@enseeiht.fr>
*/

public class Cercle implements Mesurable2D{
	
	/** Un cercle est défini par son centre, son rayon et une couleur.
	 */
	
	private Point centre;   // centre du cercle
	private double rayon;       // rayon du cercle
	private Color couleur;  // couleur du cercle
	
	/** On définit une constante appelée PI.
	 */
	private final double PI = Math.PI;
	
	/** Construire un cercle à partir de son centre et de son rayon.
	 * @param c
	 * @param rayon
	 */
	public Cercle(Point c, double rayon) {
		this.centre = c;
		this.rayon = rayon;
		this.couleur = Color.blue;
		
	}
	
	/** Construire un cercle à partir de deux points diamétralement opposés et de sa couleur.
	 * @param p1
	 * @param p2
	 */
	public Cercle(Point p1, Point p2) {
		this.rayon = p1.distance(p2)/2;
		this.centre = new Point((p1.getX() + p2.getX())/2, (p1.getY() + p2.getY())/2);
		this.couleur = Color.blue;
	}
	
	/** Construire un cercle à partir de deux points diamétralement opposés et de sa couleur.
	 * @param p1
	 * @param p2
	 * @param ncouleur
	 */
	public Cercle(Point p1, Point p2, Color ncouleur) {
		this.rayon = p1.distance(p2)/2;
		this.centre = new Point((p1.getX() + p2.getX())/2, (p1.getY() + p2.getY())/2);
		this.couleur = ncouleur;
	}
	/** Obtenir le centre du cercle.
	 * @return centre du cercle
	 */
	public Point getCentre() {
		return (new Point((this.centre).getX(), (this.centre).getY()));
	}
	
	/** Obtenir le rayon du cercle. 
	 * @return rayon du cercle
	 */
	public double getRayon() {
		return this.rayon;
	}
	
	/** Obtenir le diamètre du cercle.
	 * @return diamètre du cercle
	 */
	public double getDiametre() {
		return 2*this.rayon;
	}
	
	/** Obtenir la couleur du cercle.
	 * @return couleur du cercle
	 */
	public Color getCouleur() {
		return this.couleur;
	}
	
	/** Changer le rayon du cercle.
	 * @param nr nouveau rayon
	 */
	public void setRayon(double nr) {
		this.rayon = nr;
	}
	
	/** Changer le diamètre du cercle.
	 * @param nd le nouveau diamètre
	 */
	public void setDiametre(double nd) {
		this.rayon = nd/2;
	}
	
	/** Changer la couleur du cercle.
	 * @param nouvelleCouleur la nouvelle couleur
	 */
	public void setCouleur(Color nouvelleCouleur) {
		this.couleur = nouvelleCouleur;
	}
	
	/** Translater le cercle.
	 * @param dx déplacement suivant l'axe des x
	 * @param dy déplacement suivant l'axe des y
	 */
	public void translater(double dx, double dy) {
		this.centre.translater(dx,dy);
	}
	
	/** Afficher le cercle.
	 */
	public String toString() {
		return("C" + this.rayon +"@" + "(" + this.centre.getX() + ", " + this.centre.getY() + ")");
	}
	
	/** Savoir si un point est à l'intérieur (au sens large) du cercle.
	 * @param p
	 * @return b est un booléen
	 */
	public boolean contient(Point p) {
		return(p.distance(this.centre) <= this.rayon);
	}
	
	/** Obtenir le périmètre du cercle.
	 * @return perimetre
	 */
	public double perimetre() {
		return (2*PI*this.rayon);
	}
	
	/** Obtenir l'aire du cercle.
	 * @return aire
	 */
	public double aire() {
		return (PI*this.rayon*this.rayon);
	}
	
	
}