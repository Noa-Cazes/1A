Date de l'évaluation : dimanche 26 avril 2020, 15:07:52 (UTC+0200)

Nombre de similitudes (voir evaluation1/sim_java.txt) : 6
Les similitudes indiquent généralement du code à restructurer.

Erreurs checkstyle (différentes/types) : 1/1	(voir evaluation1//checkstyle.log)

Utilisation de 'Scanner' : ok
	./allumettes/StrategieHumaine.java:	private Scanner scanner;
	./allumettes/StrategieHumaine.java:		this.scanner = new Scanner(System.in);

Utilisation de 'split' : ok
	./allumettes/Partie.java:		result = arg.split("@", 2);

Utilisation de 'Random' : ok
	./allumettes/StrategieNaive.java:import java.util.Random;
	./allumettes/StrategieNaive.java:		Random al = new Random(); //crée un générateur de nombres aléatoires

Utilisation de '3' : ok

Utilisation de 'System.exit' : ok

Compilation de Partie.java : OK.
Compilation de Arbitre.java : OK.
Compilation de StrategieRapideTest.java : OK.
Test exemplePresqueSujet : ok
Test exempleTricheurSujet : ok
Test exempleConfiantTricheurSujet : ok
Test exempleRobustesse : ok
Test exempleRapideRapide : ok
Test exempleTricheurExpert : ok

On recommence avec les classes/interfaces fournies : Jeu ConfigurationException CoupInvalideException
Compilation de Partie.java : OK.
Compilation de Arbitre.java : OK.

Vérification du respect du diagramme de classe...
Test FormeTest : OK (2 tests)	(voir evaluation1/FormeTest.log)

Compilation de StrategieRapideTest.java : OK.
Test allumettes.StrategieRapideTest : OK (5 tests)	(voir evaluation1/allumettes.StrategieRapideTest.log)
