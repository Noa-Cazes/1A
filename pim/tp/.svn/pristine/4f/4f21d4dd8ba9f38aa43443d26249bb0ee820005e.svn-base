-- spécification du module Ensembles_Tableau.

package Ensembles_Tableau is

	type T_Ensemble is limited private; -- perd le droit à l'affectation et à l'égalité par rapport au type privé. 



	-- Savoir si l'ensemble est vide ou non.
	function Est_Vide (Ens : in T_Ensemble) return Boolean with
	    Post => Ens'apres.Taille = 0;
	

	-- Obtenir la taille d'un ensemble.
	function Taille_Ensemble (Ens : in T_Ensemble) return Integer with
	    Post => resultat = Ens.Taille;
	
	-- savoir si un élément est présent dans un ensemble.
	function Present (Ens : in T_Ensemble, Elt : in T_Tab) return Boolean;
	
	-- Ajouter un élément dans un ensemble à l'emplacement e.
	procedure Ajouter (Ens : in out T_Ensemble, Elt : in T_Tab, i : in Integer) w ith
	    Pre => Ens'Avant.Taille < Capacite and i < Capacite;
	    Post => Ens'Apres = Ens'Avant + Elt à l'emplacement i;
	

	-- Supprimer un élément dans un ensemble.
	procedure Supprimer (Ens : in out T_Ensemble, Elt : in T_Tab) with
	    Pre => Ens'Avant.Taille /= 0;
	    Post => Ens'Apres = Ens'Avant sans Elt;

	-- Sous-programme permet d'initialiser un ensemble.
	procedure Initialiser (Ens : in out T_Ensemble) with
	    Pre => 



       type T_Tab is array (1..Capcite) of Integer;
       type T_Ensemble is record
	   Elements : T_Tab;  -- les éléments de l'ensemble.
	   Taille : Integer;           -- le nombre d'éléments de l'ensemble.
       end record;
end Ensembles_Tableau;
